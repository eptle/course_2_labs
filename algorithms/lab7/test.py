a = ```
Структуры данных:
graph: Граф представлен в виде словаря, где ключи — это вершины, а значения — списки кортежей (v, weight), представляющих
ребра и их веса.
in_mst: Словарь для отслеживания включения вершины в MST.
min_edge: Словарь для хранения минимального веса ребра, соединяющего вершину с MST, и родительской вершины.
Основной цикл:
На каждом шаге ищем вершину u с минимальным весом среди тех, что еще не включены в MST.
Если все доступные вершины присоединены к MST (все значения min_edge[u][0] равны inf), выходим из цикла.
Включаем вершину u в MST, обновляем общий вес и добавляем ребро в mst, если оно не является начальным.
Обновляем минимальные веса ребер для всех смежных с u вершин, если они еще не включены в MST и вес ребра меньше текущего
минимального веса для этой вершины.
Пример использования
Этот код демонстрирует, как можно использовать алгоритм Прима для нахождения минимального остовного дерева в графе,
представленном в виде словаря смежности. Алгоритм Прима начинает с произвольной вершины (в данном случае с первой вершины
в словаре) и находит минимальное остовное дерево, добавляя ребра с наименьшим весом, которые соединяют уже включенные в
дерево вершины с еще не включенными. Итоговый список ребер MST и их суммарный вес выводятся на экран.
```